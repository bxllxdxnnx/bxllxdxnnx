{"version":3,"sources":["utility/random.ts","Home/sections/Rose/consts.ts","Home/sections/Rose/index.tsx","utility/hooks.ts","Home/index.tsx","About/index.tsx","App.tsx","index.tsx"],"names":["getRandomInt","min","max","Math","ceil","floor","random","ROSE","BXLLXDXNNX","NOT_WHITESPACE_REGEX","NEWLINE_REGEX","Rose","React","bxllxdxnnxIndex","setBxllxdxnnxIndex","outputRose","setOutputRose","hasUserInput","updateInterval","setUpdateInterval","isMutating","processRose","index","explodedRose","split","i","length","match","join","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","console","log","randomIndex","className","dangerouslySetInnerHTML","__html","Home","About","App","basename","process","to","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAAaA,G,MAAe,SAACC,EAAaC,GAGxC,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,EAAM,IAAMA,ICH1CM,EAAI,2tBAwCJC,EAAa,aAEbC,EAAuB,KACvBC,EAAgB,K,OCqFdC,MAhHf,WAAiB,IAAD,EAEgCC,WAAe,GAF/C,mBAEPC,EAFO,KAEUC,EAFV,OAGsBF,WAAeL,GAHrC,mBAGPQ,EAHO,KAGKC,EAHL,OAI8BJ,YAAe,GAApDK,EAJO,sBAK8BL,WDiBP,KCtBvB,mBAKPM,EALO,KAKSC,EALT,OAM0BP,YAAe,GAAhDQ,EANO,oBAkCRC,EAAc,SAACC,GAGnB,IAAMC,EAAehB,EAAKiB,MAAM,IAOhC,GAJAD,EAAaD,GAASd,EAAWK,GAEpBb,EAAa,EAAG,KAEnB,GACR,IAAI,IAAIyB,EAAIH,EAAOG,EAAIF,EAAaG,OAAQD,IAAK,CAE/C,GAAGF,EAAaE,GAAGE,MAAMjB,GAAgB,CACvCa,EAAaE,GAAK,GAClBN,EAAkB,IAClB,MAGCM,EAAI,IAAMF,EAAaG,SACxBD,EAAI,GAKVT,EACEO,EAAaK,KAAK,MA8CtB,OCvHyB,SAACC,EAAyBC,GACnD,IAAMC,EAAgBC,mBAGtBC,qBAAU,WACRF,EAAcG,QAAUL,IACvB,CAACA,IAGJI,qBAAU,WAMR,GAAc,OAAVH,EAAgB,CAClB,IAAMK,EAAKC,aANb,WACsC,qBAA1BL,EAAcG,SACtBH,EAAcG,YAIaJ,GAC7B,OAAO,kBAAMO,cAAcF,OAE5B,CAACL,ID0DJQ,EACE,WAEE,GAAGrB,EAOD,OANAsB,QAAQC,IAAIzB,EAAWW,aACpBX,EAAWW,OAAS,IACrBV,EAAcD,EDnDJ,MCqDVC,EAAcD,EDxDP,gCC6DRG,EDvD8B,KCwD/BC,EDxD+B,KC2DlC,IAAMsB,EAAczC,EAAa,EAAGO,EAAKmB,OAAS,GAElD,GAAGnB,EAAKkC,GAAad,MAAMlB,GAEzBY,EAAYoB,QAGZ,IAAI,IAAIhB,EAAIgB,EAAahB,EAAIlB,EAAKmB,OAAQD,IAAK,CAE9C,GAAGlB,EAAKkB,GAAGE,MAAMlB,GAAuB,CACtCY,EAAYI,GACZ,MAGEA,EAAI,IAAMlB,EAAKmB,SAChBD,EAAI,GAKXX,GAAqBD,EAAkB,GAAML,EAAWkB,UAErDN,EAAaF,EAAiB,MAIjC,qBAAKwB,UAAU,OAAOC,wBAAyB,CAAEC,OAAQ7B,M,ME5G9C8B,MAVf,WACE,OACE,qBAAKH,UAAU,OAAf,SAEE,cAAC,EAAD,O,MCESI,MARf,WACE,OACE,qBAAKJ,UAAU,QAAf,oB,MC4BWK,MAvBf,WACE,OACE,cAAC,IAAD,CAAQC,SAAUC,GAAlB,SACE,sBAAKP,UAAU,MAAf,UACE,yBAAQA,UAAU,OAAlB,UACE,cAAC,IAAD,CAAMQ,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,sBAGF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,eCjBZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.65bfcb78.chunk.js","sourcesContent":["export const getRandomInt = (min: number, max: number): number => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n","export const ROSE = `\n        .     .\n    ...  :\\`\\`..':\n     : \\`\\`\\`\\`.'   :''::'\n   ..:..  :     .'' :\n\\`\\`.    \\`:    .'     :\n    :    :   :        :\n     :   :   :         :\n     :    :   :        :\n      :    :   :..''''\\`\\`::.\n       : ...:..'     .''\n       .'   .'  .::::'\n      :..'''\\`\\`:::::::\n      '         \\`::::\n                  \\`::.\n                   \\`::\n                    :::.\n         ..:\\`\\`\\`.:'\\`. ::'\\`.\n       ..'      \\`:.: ::\n      .:        .:\\`\\`:::\n      .:    ..''     :::\n       : .''         .::\n        :          .'\\`::\n                       ::\n                       ::\n                        :\n                        :\n                        :\n                        :\n                        .\n`;\n\nexport const STEM = `                        :\n`;\n\nexport const NEWLINE = `\n`;\n\nexport const INITIAL_UPDATE_INTERVAL = 600;\n\nexport const BXLLXDXNNX = 'bxllxdxnnx';\n\nexport const NOT_WHITESPACE_REGEX = /\\S/;\nexport const NEWLINE_REGEX = /\\n/;\n\nexport const USER_INTERACTION_EVENTS = [\n  'scroll',\n  'keydown',\n  'mousedown',\n  'click',\n  'touchstart',\n  'resize',\n];\n","import * as React from 'react';\nimport './index.css';\nimport { useInterval } from 'utility/hooks';\nimport { getRandomInt } from 'utility/random';\nimport {\n  ROSE,\n  BXLLXDXNNX,\n  STEM,\n  // USER_INTERACTION_EVENTS,\n  NOT_WHITESPACE_REGEX,\n  NEWLINE_REGEX,\n  NEWLINE,\n  INITIAL_UPDATE_INTERVAL,\n} from './consts';\n\n\nfunction Rose() {\n\n  const [bxllxdxnnxIndex, setBxllxdxnnxIndex] = React.useState(0);\n  const [outputRose, setOutputRose] = React.useState(ROSE);\n  const [hasUserInput/*, setHasUserInput*/] = React.useState(false);\n  const [updateInterval, setUpdateInterval] = React.useState(INITIAL_UPDATE_INTERVAL);\n  const [isMutating/*, setIsMutating*/] = React.useState(true);\n\n  // React.useEffect(() => {\n  //   const onInput = () => {\n  //     setHasUserInput(true);\n  //     setOutputRose(ROSE);\n  //     setUpdateInterval(50);\n  //     setTimeout(() => {\n  //       setIsMutating(false);\n  //     }, 6 * 1000);\n  //\n  //     for(const eventName of USER_INTERACTION_EVENTS) {\n  //       window.removeEventListener(eventName, onInput);\n  //     }\n  //   };\n  //\n  //   for(const eventName of USER_INTERACTION_EVENTS) {\n  //     window.addEventListener(eventName, onInput);\n  //   }\n  //\n  //   return () => {\n  //     for(const eventName of USER_INTERACTION_EVENTS) {\n  //       window.removeEventListener(eventName, onInput);\n  //     }\n  //   }\n  //\n  // }, []);\n\n  const processRose = (index: number) => {\n\n\n    const explodedRose = ROSE.split('');\n    // explodedRose[index - 1] = '[';\n    // explodedRose[index + 1] = ']';\n    explodedRose[index] = BXLLXDXNNX[bxllxdxnnxIndex];\n\n    const rand = getRandomInt(0, 100);\n\n    if(rand < 33) {\n      for(let i = index; i < explodedRose.length; i++) {\n\n        if(explodedRose[i].match(NEWLINE_REGEX)) {\n          explodedRose[i] = '';\n          setUpdateInterval(50);\n          break;\n        }\n\n        if(i + 1 === explodedRose.length) {\n          i = 0;\n        }\n      }\n    }\n\n    setOutputRose(\n      explodedRose.join('')\n    );\n  };\n\n  useInterval(\n    () => {\n\n      if(hasUserInput) {\n        console.log(outputRose.length);\n        if(outputRose.length > 2000) {\n          setOutputRose(outputRose + NEWLINE);\n        } else {\n          setOutputRose(outputRose + STEM);\n        }\n        return;\n      }\n\n      if(updateInterval < INITIAL_UPDATE_INTERVAL) {\n        setUpdateInterval(INITIAL_UPDATE_INTERVAL);\n      }\n\n     const randomIndex = getRandomInt(0, ROSE.length - 1);\n\n     if(ROSE[randomIndex].match(NOT_WHITESPACE_REGEX)) {\n\n       processRose(randomIndex);\n\n     } else {\n       for(let i = randomIndex; i < ROSE.length; i++) {\n\n        if(ROSE[i].match(NOT_WHITESPACE_REGEX)) {\n          processRose(i);\n          break;\n        }\n\n         if(i + 1 === ROSE.length) {\n           i = 0;\n         }\n       }\n     }\n\n    setBxllxdxnnxIndex(( bxllxdxnnxIndex + 1 ) % BXLLXDXNNX.length);\n\n    }, isMutating ? updateInterval : null\n  );\n\n  return (\n    <div className=\"Rose\" dangerouslySetInnerHTML={{ __html: outputRose }}>\n    </div>\n  );\n}\n\nexport default Rose;\n","import { useState, useEffect, useRef, MutableRefObject } from 'react';\n\n// via: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\nexport const useInterval = (callback: () => unknown, delay: number | null) => {\n  const savedCallback = useRef<() => unknown>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      if(typeof savedCallback.current !== 'undefined') {\n        savedCallback.current();\n      }\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n\n\nexport const useDetectOutsideClick = (el: MutableRefObject<HTMLElement>, initialState: boolean) => {\n  const [isActive, setIsActive] = useState(initialState);\n\n  useEffect(() => {\n    const pageClickEvent = (e: MouseEvent) => {\n      const target = e.target as HTMLElement;\n      // If the active element exists and is clicked outside of\n      if (el.current !== null && !el.current.contains(target)) {\n        setIsActive(!isActive);\n      }\n    };\n\n    // If the item is active (ie open) then listen for clicks\n    if (isActive) {\n      window.addEventListener('click', pageClickEvent);\n    }\n\n    return () => {\n      window.removeEventListener('click', pageClickEvent);\n    }\n\n  }, [isActive, el]);\n\n  return [isActive, setIsActive];\n}\n\nexport const useSelectorSimpleEquality = (prev: any, next: any): boolean => {\n  return JSON.stringify(prev) === JSON.stringify(next);\n};\n","import * as React from 'react';\n\nimport Rose from './sections/Rose';\nimport './index.css';\n\nfunction Home() {\n  return (\n    <div className=\"Home\">\n\n      <Rose/>\n\n    </div>\n  );\n}\n\nexport default Home;\n","import * as React from 'react';\nimport './index.css';\n\nfunction About() {\n  return (\n    <div className=\"About\">\n      About\n    </div>\n  );\n}\n\nexport default About;\n","import {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\nimport Home from './Home';\nimport About from './About';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <header className=\"menu\">\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/about\">About</Link>\n        </header>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n        </Switch>\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fontsource/anonymous-pro';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}